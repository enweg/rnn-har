acf = autocor,
pacf = pautocor)
ac %>%
pivot_longer(-lag, names_to = "type", values_to = "cor") %>%
ggplot() +
geom_line(aes(x = lag, y = cor, linetype = type), width = 0.5) +
geom_point(aes(x = lag, y = cor, shape = type)) +
xlab("Lag") + ylab("") +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = "top")
ac %>%
pivot_longer(-lag, names_to = "type", values_to = "cor") %>%
ggplot() +
geom_line(aes(x = lag, y = cor, linetype = type)) +
geom_point(aes(x = lag, y = cor, shape = type)) +
xlab("Lag") + ylab("") +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = "top")
p.acf <- ac %>%
pivot_longer(-lag, names_to = "type", values_to = "cor") %>%
ggplot() +
geom_line(aes(x = lag, y = cor, linetype = type)) +
geom_point(aes(x = lag, y = cor, shape = type)) +
xlab("Lag") + ylab("") +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = "top")
p.acf
library(tidyverse)
library(scales)
set.seed(6150533)
data <- read_csv("../../data/oxfordmanrealizedvolatilityindices.csv")
colnames(data)[1] <- "dt"
data <- data %>%
group_by(Symbol) %>%
arrange(dt) %>%
mutate(lreturn = log(close_price) - lag(log(close_price))) %>%
ungroup() %>%
select(dt, Symbol, rv5, lreturn) %>%
mutate(rv5 = log(sqrt(rv5)))
# Earliest start dates
keep_symbols <- data %>%
group_by(Symbol) %>%
summarise(min_dt = min(dt),
max_dt = max(dt),
start_year = as.numeric(format(min_dt, "%Y"))) %>%
filter(start_year <= 2000) %>%
pull(Symbol)
data <- data %>%
filter(Symbol %in% keep_symbols)
# Since we are working with log RV we also need to remove those
# Symbols that have an RV of zero at some point
# or equivalently were the log(RV) = -Inf
zero_symbols <- data %>%
filter(is.infinite(rv5)) %>%
select(Symbol) %>%
unique() %>%
pull(Symbol)
data <- data %>%
filter(!Symbol %in% zero_symbols)
# Adding RV_weekly and RV_monthly
data <- data %>%
group_by(Symbol) %>%
arrange(dt) %>%
mutate(rv5_weekly = zoo::rollmean(rv5, 5, fill = NA, align = "right"),
rv5_monthly = zoo::rollmean(rv5, 22, fill = NA, align = "right")) %>%
rename(rv5_daily = rv5) %>%
ungroup()
######################################################################
#### Data Section Visualisations #####################################
# Leverage Effects
leverage <- data %>%
group_by(Symbol) %>%
arrange(dt) %>%
mutate(crv5 = rv5 - lag(rv5),
sign = ifelse(lag(lreturn) < 0, "Negative", "Non-Negative")) %>%
ungroup() %>%
drop_na() %>%
group_by(Symbol, sign) %>%
summarise(mean = mean(crv5, na.rm = TRUE),
se = sd(crv5, na.rm = TRUE)/sqrt(n()),
.groups = "drop")
p.levarge <- leverage %>%
ggplot() +
geom_point(aes(Symbol, mean, shape = sign)) +
geom_errorbar(aes(Symbol, y = mean, ymin = mean - 2*se,
ymax = mean + 2*se, linetype = sign)) +
xlab("") + ylab("Change in log(RV)") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90),
legend.title = element_blank(),
legend.position = "top")
p.leverage
ggsave("../../figures/leverage.pdf", plot = p.levarage, device = "pdf",
width = 7, height = 5)
# Time Series Plot
p.ts <- data %>%
filter(Symbol == ".SPX") %>%
mutate(dt = as.Date(dt)) %>%
select(dt, starts_with("rv")) %>%
pivot_longer(-dt, names_to = c(".value", "Frequency"), names_sep = "_") %>%
mutate(Frequency = factor(Frequency, levels = c("daily", "weekly", "monthly"))) %>%
ggplot(aes(dt, rv5)) +
geom_line() +
facet_wrap(vars(Frequency), ncol = 1) +
xlab("") + ylab("log(RV)") +
scale_x_date(date_breaks = "years", date_labels = "%Y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
p.ts
ggsave("../../figures/spx_rv.pdf", plot = p.ts, device = "pdf", width = 7, height = 5)
# Autocorrelations
spx <- data %>%
filter(Symbol == ".SPX") %>%
arrange(dt) %>%
pull(rv5_daily)
autocor <- acf(spx, lag.max = 100, plot = FALSE)$acf[, , 1]
pautocor <- pacf(spx, lag.max = 100, plot = FALSE)$acf[, , 1]
pautocor <- c(NA, pautocor)
ac <- tibble(lag = 0:(length(autocor)-1),
acf = autocor,
pacf = pautocor)
p.acf <- ac %>%
pivot_longer(-lag, names_to = "type", values_to = "cor") %>%
ggplot() +
geom_line(aes(x = lag, y = cor, linetype = type)) +
geom_point(aes(x = lag, y = cor, shape = type)) +
xlab("Lag") + ylab("") +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = "top")
p.acf
ggsave("../../figures/acf.pdf", plot = p.acf, device = "pdf",
width = 7, height = 5)
library(tidyverse)
library(scales)
set.seed(6150533)
data <- read_csv("../../data/oxfordmanrealizedvolatilityindices.csv")
colnames(data)[1] <- "dt"
data <- data %>%
group_by(Symbol) %>%
arrange(dt) %>%
mutate(lreturn = log(close_price) - lag(log(close_price))) %>%
ungroup() %>%
select(dt, Symbol, rv5, lreturn) %>%
mutate(rv5 = log(sqrt(rv5)))
# Earliest start dates
keep_symbols <- data %>%
group_by(Symbol) %>%
summarise(min_dt = min(dt),
max_dt = max(dt),
start_year = as.numeric(format(min_dt, "%Y"))) %>%
filter(start_year <= 2000) %>%
pull(Symbol)
data <- data %>%
filter(Symbol %in% keep_symbols)
# Since we are working with log RV we also need to remove those
# Symbols that have an RV of zero at some point
# or equivalently were the log(RV) = -Inf
zero_symbols <- data %>%
filter(is.infinite(rv5)) %>%
select(Symbol) %>%
unique() %>%
pull(Symbol)
data <- data %>%
filter(!Symbol %in% zero_symbols)
# Adding RV_weekly and RV_monthly
data <- data %>%
group_by(Symbol) %>%
arrange(dt) %>%
mutate(rv5_weekly = zoo::rollmean(rv5, 5, fill = NA, align = "right"),
rv5_monthly = zoo::rollmean(rv5, 22, fill = NA, align = "right")) %>%
rename(rv5_daily = rv5) %>%
ungroup()
######################################################################
#### Data Section Visualisations #####################################
# Leverage Effects
leverage <- data %>%
group_by(Symbol) %>%
arrange(dt) %>%
mutate(crv5 = rv5 - lag(rv5),
sign = ifelse(lag(lreturn) < 0, "Negative", "Non-Negative")) %>%
ungroup() %>%
drop_na() %>%
group_by(Symbol, sign) %>%
summarise(mean = mean(crv5, na.rm = TRUE),
se = sd(crv5, na.rm = TRUE)/sqrt(n()),
.groups = "drop")
p.levarage <- leverage %>%
ggplot() +
geom_point(aes(Symbol, mean, shape = sign)) +
geom_errorbar(aes(Symbol, y = mean, ymin = mean - 2*se,
ymax = mean + 2*se, linetype = sign)) +
xlab("") + ylab("Change in log(RV)") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90),
legend.title = element_blank(),
legend.position = "top")
p.leverage
ggsave("../../figures/leverage.pdf", plot = p.levarage, device = "pdf",
width = 7, height = 5)
# Time Series Plot
p.ts <- data %>%
filter(Symbol == ".SPX") %>%
mutate(dt = as.Date(dt)) %>%
select(dt, starts_with("rv")) %>%
pivot_longer(-dt, names_to = c(".value", "Frequency"), names_sep = "_") %>%
mutate(Frequency = factor(Frequency, levels = c("daily", "weekly", "monthly"))) %>%
ggplot(aes(dt, rv5)) +
geom_line() +
facet_wrap(vars(Frequency), ncol = 1) +
xlab("") + ylab("log(RV)") +
scale_x_date(date_breaks = "years", date_labels = "%Y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
p.ts
ggsave("../../figures/spx_rv.pdf", plot = p.ts, device = "pdf", width = 7, height = 5)
# Autocorrelations
spx <- data %>%
filter(Symbol == ".SPX") %>%
arrange(dt) %>%
pull(rv5_daily)
autocor <- acf(spx, lag.max = 100, plot = FALSE)$acf[, , 1]
pautocor <- pacf(spx, lag.max = 100, plot = FALSE)$acf[, , 1]
pautocor <- c(NA, pautocor)
ac <- tibble(lag = 0:(length(autocor)-1),
acf = autocor,
pacf = pautocor)
p.acf <- ac %>%
pivot_longer(-lag, names_to = "type", values_to = "cor") %>%
ggplot() +
geom_line(aes(x = lag, y = cor, linetype = type)) +
geom_point(aes(x = lag, y = cor, shape = type)) +
xlab("Lag") + ylab("") +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = "top")
p.acf
ggsave("../../figures/acf.pdf", plot = p.acf, device = "pdf",
width = 7, height = 5)
library(tidyverse)
library(scales)
set.seed(6150533)
data <- read_csv("../../data/oxfordmanrealizedvolatilityindices.csv")
colnames(data)[1] <- "dt"
data <- data %>%
group_by(Symbol) %>%
arrange(dt) %>%
mutate(lreturn = log(close_price) - lag(log(close_price))) %>%
ungroup() %>%
select(dt, Symbol, rv5, lreturn) %>%
mutate(rv5 = log(sqrt(rv5)))
# Earliest start dates
keep_symbols <- data %>%
group_by(Symbol) %>%
summarise(min_dt = min(dt),
max_dt = max(dt),
start_year = as.numeric(format(min_dt, "%Y"))) %>%
filter(start_year <= 2000) %>%
pull(Symbol)
data <- data %>%
filter(Symbol %in% keep_symbols)
# Since we are working with log RV we also need to remove those
# Symbols that have an RV of zero at some point
# or equivalently were the log(RV) = -Inf
zero_symbols <- data %>%
filter(is.infinite(rv5)) %>%
select(Symbol) %>%
unique() %>%
pull(Symbol)
data <- data %>%
filter(!Symbol %in% zero_symbols)
# Adding RV_weekly and RV_monthly
data <- data %>%
group_by(Symbol) %>%
arrange(dt) %>%
mutate(rv5_weekly = zoo::rollmean(rv5, 5, fill = NA, align = "right"),
rv5_monthly = zoo::rollmean(rv5, 22, fill = NA, align = "right")) %>%
rename(rv5_daily = rv5) %>%
ungroup()
######################################################################
#### Data Section Visualisations #####################################
# Leverage Effects
leverage <- data %>%
group_by(Symbol) %>%
arrange(dt) %>%
mutate(crv5 = rv5 - lag(rv5),
sign = ifelse(lag(lreturn) < 0, "Negative", "Non-Negative")) %>%
ungroup() %>%
drop_na() %>%
group_by(Symbol, sign) %>%
summarise(mean = mean(crv5, na.rm = TRUE),
se = sd(crv5, na.rm = TRUE)/sqrt(n()),
.groups = "drop")
p.leverage <- leverage %>%
ggplot() +
geom_point(aes(Symbol, mean, shape = sign)) +
geom_errorbar(aes(Symbol, y = mean, ymin = mean - 2*se,
ymax = mean + 2*se, linetype = sign)) +
xlab("") + ylab("Change in log(RV)") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90),
legend.title = element_blank(),
legend.position = "top")
p.leverage
ggsave("../../figures/leverage.pdf", plot = p.levarage, device = "pdf",
width = 7, height = 5)
# Time Series Plot
p.ts <- data %>%
filter(Symbol == ".SPX") %>%
mutate(dt = as.Date(dt)) %>%
select(dt, starts_with("rv")) %>%
pivot_longer(-dt, names_to = c(".value", "Frequency"), names_sep = "_") %>%
mutate(Frequency = factor(Frequency, levels = c("daily", "weekly", "monthly"))) %>%
ggplot(aes(dt, rv5)) +
geom_line() +
facet_wrap(vars(Frequency), ncol = 1) +
xlab("") + ylab("log(RV)") +
scale_x_date(date_breaks = "years", date_labels = "%Y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
p.ts
ggsave("../../figures/spx_rv.pdf", plot = p.ts, device = "pdf", width = 7, height = 5)
# Autocorrelations
spx <- data %>%
filter(Symbol == ".SPX") %>%
arrange(dt) %>%
pull(rv5_daily)
autocor <- acf(spx, lag.max = 100, plot = FALSE)$acf[, , 1]
pautocor <- pacf(spx, lag.max = 100, plot = FALSE)$acf[, , 1]
pautocor <- c(NA, pautocor)
ac <- tibble(lag = 0:(length(autocor)-1),
acf = autocor,
pacf = pautocor)
p.acf <- ac %>%
pivot_longer(-lag, names_to = "type", values_to = "cor") %>%
ggplot() +
geom_line(aes(x = lag, y = cor, linetype = type)) +
geom_point(aes(x = lag, y = cor, shape = type)) +
xlab("Lag") + ylab("") +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = "top")
p.acf
ggsave("../../figures/acf.pdf", plot = p.acf, device = "pdf",
width = 7, height = 5)
leverage <- data %>%
group_by(Symbol) %>%
arrange(dt) %>%
mutate(crv5 = rv5_daily - lag(rv5_daily),
sign = ifelse(lag(lreturn) < 0, "Negative", "Non-Negative")) %>%
ungroup() %>%
drop_na() %>%
group_by(Symbol, sign) %>%
summarise(mean = mean(crv5, na.rm = TRUE),
se = sd(crv5, na.rm = TRUE)/sqrt(n()),
.groups = "drop")
p.leverage <- leverage %>%
ggplot() +
geom_point(aes(Symbol, mean, shape = sign)) +
geom_errorbar(aes(Symbol, y = mean, ymin = mean - 2*se,
ymax = mean + 2*se, linetype = sign)) +
xlab("") + ylab("Change in log(RV)") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90),
legend.title = element_blank(),
legend.position = "top")
p.leverage
ggsave("../../figures/leverage.pdf", plot = p.levarage, device = "pdf",
width = 7, height = 5)
library(tidyverse)
library(scales)
set.seed(6150533)
data <- read_csv("../../data/oxfordmanrealizedvolatilityindices.csv")
colnames(data)[1] <- "dt"
data <- data %>%
group_by(Symbol) %>%
arrange(dt) %>%
mutate(lreturn = log(close_price) - lag(log(close_price))) %>%
ungroup() %>%
select(dt, Symbol, rv5, lreturn) %>%
mutate(rv5 = log(sqrt(rv5)))
# Earliest start dates
keep_symbols <- data %>%
group_by(Symbol) %>%
summarise(min_dt = min(dt),
max_dt = max(dt),
start_year = as.numeric(format(min_dt, "%Y"))) %>%
filter(start_year <= 2000) %>%
pull(Symbol)
data <- data %>%
filter(Symbol %in% keep_symbols)
# Since we are working with log RV we also need to remove those
# Symbols that have an RV of zero at some point
# or equivalently were the log(RV) = -Inf
zero_symbols <- data %>%
filter(is.infinite(rv5)) %>%
select(Symbol) %>%
unique() %>%
pull(Symbol)
data <- data %>%
filter(!Symbol %in% zero_symbols)
# Adding RV_weekly and RV_monthly
data <- data %>%
group_by(Symbol) %>%
arrange(dt) %>%
mutate(rv5_weekly = zoo::rollmean(rv5, 5, fill = NA, align = "right"),
rv5_monthly = zoo::rollmean(rv5, 22, fill = NA, align = "right")) %>%
rename(rv5_daily = rv5) %>%
ungroup()
######################################################################
#### Data Section Visualisations #####################################
# Leverage Effects
leverage <- data %>%
group_by(Symbol) %>%
arrange(dt) %>%
mutate(crv5 = rv5_daily - lag(rv5_daily),
sign = ifelse(lag(lreturn) < 0, "Negative", "Non-Negative")) %>%
ungroup() %>%
drop_na() %>%
group_by(Symbol, sign) %>%
summarise(mean = mean(crv5, na.rm = TRUE),
se = sd(crv5, na.rm = TRUE)/sqrt(n()),
.groups = "drop")
p.leverage <- leverage %>%
ggplot() +
geom_point(aes(Symbol, mean, shape = sign)) +
geom_errorbar(aes(Symbol, y = mean, ymin = mean - 2*se,
ymax = mean + 2*se, linetype = sign)) +
xlab("") + ylab("Change in log(RV)") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90),
legend.title = element_blank(),
legend.position = "top")
p.leverage
ggsave("../../figures/leverage.pdf", plot = p.levarage, device = "pdf",
width = 7, height = 5)
# Time Series Plot
p.ts <- data %>%
filter(Symbol == ".SPX") %>%
mutate(dt = as.Date(dt)) %>%
select(dt, starts_with("rv")) %>%
pivot_longer(-dt, names_to = c(".value", "Frequency"), names_sep = "_") %>%
mutate(Frequency = factor(Frequency, levels = c("daily", "weekly", "monthly"))) %>%
ggplot(aes(dt, rv5)) +
geom_line() +
facet_wrap(vars(Frequency), ncol = 1) +
xlab("") + ylab("log(RV)") +
scale_x_date(date_breaks = "years", date_labels = "%Y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
p.ts
ggsave("../../figures/spx_rv.pdf", plot = p.ts, device = "pdf", width = 7, height = 5)
# Autocorrelations
spx <- data %>%
filter(Symbol == ".SPX") %>%
arrange(dt) %>%
pull(rv5_daily)
autocor <- acf(spx, lag.max = 100, plot = FALSE)$acf[, , 1]
pautocor <- pacf(spx, lag.max = 100, plot = FALSE)$acf[, , 1]
pautocor <- c(NA, pautocor)
ac <- tibble(lag = 0:(length(autocor)-1),
acf = autocor,
pacf = pautocor)
p.acf <- ac %>%
pivot_longer(-lag, names_to = "type", values_to = "cor") %>%
ggplot() +
geom_line(aes(x = lag, y = cor, linetype = type)) +
geom_point(aes(x = lag, y = cor, shape = type)) +
xlab("Lag") + ylab("") +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = "top")
p.acf
ggsave("../../figures/acf.pdf", plot = p.acf, device = "pdf",
width = 7, height = 5)
har_sim <- function(const, daily, weekly, monthly, N, burnin = 1000, sig = 1.0){
rv <- c(rep(0, 22), rep(NA, burnin + N))
for (t in (23:(22+N+burnin))){
rv_daily <- rv[t-1]
rv_weekly <- mean(rv[(t-5):(t-1)])
rv_monthly <- mean(rv[(t-22):(t-1)])
rv[t] <- const + daily*rv_daily + weekly*rv_weekly + monthly*rv_monthly + sig*rnorm(1)
}
return(rv[(length(rv)-N+1):length(rv)])
}
data
tmp <- data %>%
filter(Symbol == ".SPX") %>%
select(starts_with("rv")) %>%
mutate(across(starts_with("rv"),
.fns = list(l1 = lag)))
tmp
tmp <- data %>%
filter(Symbol == ".SPX") %>%
select(starts_with("rv")) %>%
mutate(across(starts_with("rv"),
.fns = list(l1 = lag))) %>%
select(rv5_daily, ends_with("l1"))
tmp
har_mod <- lm(rv5_daily ~ ., data = tmp)
har_mod$coefficients
coeffs <- har_mod$coefficients
sig <- sd(har_mod$residuals)
sig
har_simulated <- har_sim(coeffs[[1]], coeffs[[2]], coeffs[[3]], coeffs[[4]],
nrow(tmp), sig = sig)
plot.ts(har_simulated)
acf(har_simulated)
pacf(har_simulated)
